<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="SSO Authentication Template" type="SSOAuthentication">
    <Description>
        A rule used to perform SSO authentication.
      </Description>
    <Signature returnType="SailPointObject">
        <Inputs>
          <Argument name="context">
            <Description>
              A sailpoint.api.SailPointContext object that can be used to query
              the database if necessary.
            </Description>
          </Argument>
          <Argument name="log">
            <Description>
              The log object associated with the SailPointContext.
            </Description>
          </Argument>

            <Argument name="httpRequest">
                <Description>
              A javax.servlet.http.HttpServletRequest object containing the SSO
              data.
            </Description>
            </Argument>
        </Inputs>
        <Returns>
            <Argument name="identity Or Link">
                <Description>
              The Identity or Link that has been authenticated via SSO.
              Starting in 6.1 this rule can return either the Identity or
              the specific Link that was used to authenticate the user.
              Returning the Link is the preferred way as it provides the
              exact account back to the server side which can be helpful
              when collecting authentication for electronic signatures.
            </Description>
            </Argument>
        </Returns>
    </Signature>

<ReferencedRules>
  <Reference class="sailpoint.object.Rule" name="Global Rule Library"/>
</ReferencedRules>
  <Source>
<![CDATA[
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import sailpoint.api.SailPointContext;
import org.apache.commons.logging.Log;
import sailpoint.object.TaskResult;
import javax.servlet.http.HttpServletRequest;

//Log mylogger = LogFactory.getLog("rule.SSOAuthentication");
//mylogger.debug("Start SSOAuthentication");
//add the following lines to IIQ Log4j properties file to use this logger
//logger.SSOAuthentication.name=rule.SSOAuthentication 
//logger.SSOAuthentication.level=debug

//Available Input Variables
//httpRequest;


//mylogger.debug("End SSOAuthentication");
//return SailPointObject
return null;
]]>
  </Source>
</Rule>
</sailpoint>