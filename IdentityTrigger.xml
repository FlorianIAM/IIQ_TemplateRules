<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="Identity Trigger Template" type="IdentityTrigger">
    <Description>
        This rule can be used for Certification Events that use rule triggers.
        The previousIdentity and newIdentity hold snapshots of the
        identity before the update has occurred and the state of the
        identity after the update, respectively.
      </Description>
    <Signature returnType="boolean">
        <Inputs>
          <Argument name="context">
            <Description>
              A sailpoint.api.SailPointContext object that can be used to query
              the database if necessary.
            </Description>
          </Argument>
          <Argument name="log">
            <Description>
              The log object associated with the SailPointContext.
            </Description>
          </Argument>

            <Argument name="previousIdentity">
                <Description>
              The identity before the refresh/aggregation (this will be null when
              an
              identity is created).
            </Description>
            </Argument>
            <Argument name="newIdentity">
                <Description>
              The identity after the refresh/aggregation (this will be null when
              an
              identity is deleted).
            </Description>
            </Argument>
        </Inputs>
        <Returns>
            <Argument name="result">
                <Description>
              A boolean describing the result of the rule.
            </Description>
            </Argument>
        </Returns>
    </Signature>

<ReferencedRules>
  <Reference class="sailpoint.object.Rule" name="Global Rule Library"/>
</ReferencedRules>
  <Source>
<![CDATA[
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import sailpoint.api.SailPointContext;
import org.apache.commons.logging.Log;
import sailpoint.object.TaskResult;
import sailpoint.object.Identity;
import sailpoint.object.Identity;

//Log mylogger = LogFactory.getLog("rule.IdentityTrigger");
//mylogger.debug("Start IdentityTrigger");
//add the following lines to IIQ Log4j properties file to use this logger
//logger.IdentityTrigger.name=rule.IdentityTrigger 
//logger.IdentityTrigger.level=debug

//Available Input Variables
//previousIdentity;
//newIdentity;


//mylogger.debug("End IdentityTrigger");
//return boolean
return false;
]]>
  </Source>
</Rule>
</sailpoint>