<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="After Provisioning Rule Template" type="AfterProvisioning">
    <Description>
        An IdentityIQ server-side rule that is executed after the connector's
        provisioning method is called. This gives the customer the
        ability to customize or react to anything in the
        ProvisioningPlan AFTER it has been sent out to the specific
        applications.

        This rule will be called for any application found in a plan that also
        has a configured 'afterProvisioningRule' configured.
      </Description>
    <Signature>
        <Inputs>
          <Argument name="context">
            <Description>
              A sailpoint.api.SailPointContext object that can be used to query
              the database if necessary.
            </Description>
          </Argument>
          <Argument name="log">
            <Description>
              The log object associated with the SailPointContext.
            </Description>
          </Argument>

            <Argument name="plan">
                <Description>
              The ProvisioningPlan object on its way to the Connector.
            </Description>
            </Argument>
            <Argument name="application">
                <Description>
              The application object that references this before/after script.
            </Description>
            </Argument>
            <Argument name="result">
                <Description>
              The ProvisioningResult object returned by the connectors provision
              method. This can be null and in many cases the connector
              will not return a result and instead will annotate the
              plan's ProvisioningResult either at the plan or account
              level.
            </Description>
            </Argument>
        </Inputs>
    </Signature>

<ReferencedRules>
  <Reference class="sailpoint.object.Rule" name="Global Rule Library"/>
</ReferencedRules>
  <Source>
<![CDATA[
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import sailpoint.api.SailPointContext;
import org.apache.commons.logging.Log;
import sailpoint.object.TaskResult;
import sailpoint.object.ProvisioningPlan;
import sailpoint.object.Application;
import sailpoint.object.ProvisioningResult;

//Log mylogger = LogFactory.getLog("rule.AfterProvisioning");
//mylogger.debug("Start AfterProvisioning");
//add the following lines to IIQ Log4j properties file to use this logger
//logger.AfterProvisioning.name=rule.AfterProvisioning 
//logger.AfterProvisioning.level=debug

//Available Input Variables
//plan;
//application;
//result;


//mylogger.debug("End AfterProvisioning");
//this rule does not return anything

]]>
  </Source>
</Rule>
</sailpoint>