<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="Before Provisioning Rule Template" type="BeforeProvisioning">
    <Description>
        An IdentityIQ server-side rule that is executed before the connector's
        provisioning method is called. This gives the customer the
        ability to customize or react to anything in the
        ProvisioningPlan BEFORE it is sent to the underlying connectors
        used in provisioning.

        This rule will be called for any application found in a plan that also
        has a configured 'beforeProvisioningRule' configured.

        The plan can be updated directly in the rule by reference and does not
        need to return the plan.
      </Description>
    <Signature>
        <Inputs>
          <Argument name="context">
            <Description>
              A sailpoint.api.SailPointContext object that can be used to query
              the database if necessary.
            </Description>
          </Argument>
          <Argument name="log">
            <Description>
              The log object associated with the SailPointContext.
            </Description>
          </Argument>

            <Argument name="plan">
                <Description>
              The ProvisioningPlan object on its way to the Connector.
            </Description>
            </Argument>
            <Argument name="application">
                <Description>
              The application object that references this before/after script.
            </Description>
            </Argument>
        </Inputs>
    </Signature>

<ReferencedRules>
  <Reference class="sailpoint.object.Rule" name="Global Rule Library"/>
</ReferencedRules>
  <Source>
<![CDATA[
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import sailpoint.api.SailPointContext;
import org.apache.commons.logging.Log;
import sailpoint.object.TaskResult;
import sailpoint.object.ProvisioningPlan;
import sailpoint.object.Application;

//Log mylogger = LogFactory.getLog("rule.BeforeProvisioning");
//mylogger.debug("Start BeforeProvisioning");
//add the following lines to IIQ Log4j properties file to use this logger
//logger.BeforeProvisioning.name=rule.BeforeProvisioning 
//logger.BeforeProvisioning.level=debug

//Available Input Variables
//plan;
//application;


//mylogger.debug("End BeforeProvisioning");
//this rule does not return anything

]]>
  </Source>
</Rule>
</sailpoint>