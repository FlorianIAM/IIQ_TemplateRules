<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="Violation Template" type="Violation">
    <Description>
        This rule is used to format a PolicyViolation object.
      </Description>
    <Signature returnType="PolicyViolation">
        <Inputs>
          <Argument name="context">
            <Description>
              A sailpoint.api.SailPointContext object that can be used to query
              the database if necessary.
            </Description>
          </Argument>
          <Argument name="log">
            <Description>
              The log object associated with the SailPointContext.
            </Description>
          </Argument>

            <Argument name="identity">
                <Description>
              The Identity in violation.
            </Description>
            </Argument>
            <Argument name="policy">
                <Description>
              The Policy being violated.
            </Description>
            </Argument>
            <Argument name="constraint">
                <Description>
              The Constraint being violated.
            </Description>
            </Argument>
            <Argument name="violation">
                <Description>
              The PolicyViolation object.
            </Description>
            </Argument>
            <Argument name="state">
                <Description>
              A Map containing state information.
            </Description>
            </Argument>
        </Inputs>
        <Returns>
            <Argument name="violation">
                <Description>
              The formatted PolicyViolation object.
            </Description>
            </Argument>
        </Returns>
    </Signature>

<ReferencedRules>
  <Reference class="sailpoint.object.Rule" name="Global Rule Library"/>
</ReferencedRules>
  <Source>
<![CDATA[
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import sailpoint.api.SailPointContext;
import org.apache.commons.logging.Log;
import sailpoint.object.TaskResult;
import sailpoint.object.Identity;
import sailpoint.object.Policy;
import sailpoint.object.BaseConstraint;
import sailpoint.object.PolicyViolation;
import java.util.Map;

//Log mylogger = LogFactory.getLog("rule.Violation");
//mylogger.debug("Start Violation");
//add the following lines to IIQ Log4j properties file to use this logger
//logger.Violation.name=rule.Violation 
//logger.Violation.level=debug

//Available Input Variables
//identity;
//policy;
//constraint;
//violation;
//state;


//mylogger.debug("End Violation");
//return PolicyViolation
return null;
]]>
  </Source>
</Rule>
</sailpoint>