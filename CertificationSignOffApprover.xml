<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="Certification Sign Off Approver Template" type="CertificationSignOffApprover">
    <Description>
        This rule is run when the certification is signed off to determine who
        (if anyone) needs to approve the certification decisions. If
        this returns a non-null identity, the certification is forwarded
        to the returned identity.
      </Description>
    <Signature returnType="Map">
        <Inputs>
          <Argument name="context">
            <Description>
              A sailpoint.api.SailPointContext object that can be used to query
              the database if necessary.
            </Description>
          </Argument>
          <Argument name="log">
            <Description>
              The log object associated with the SailPointContext.
            </Description>
          </Argument>

            <Argument name="certification">
                <Description>
              The sailpoint.object.Certification that was signed.
            </Description>
            </Argument>
            <Argument name="certifier">
                <Description>
              The sailpoint.object.Identity that signed the certification.
            </Description>
            </Argument>
        </Inputs>
        <Returns>
            <Argument name="identityName">
                <Description>
              The name of the Identity that should approve the certification.
              Either
              this or 'identity' should be non-null if certification sign off
              approval
              is desired.
            </Description>
            </Argument>
            <Argument name="identity">
                <Description>
              The Identity that should approve the certification. Either this or
              'identityName' should be non-null if certification sign
              off approval
              is desired.
            </Description>
            </Argument>
        </Returns>
    </Signature>

<ReferencedRules>
  <Reference class="sailpoint.object.Rule" name="Global Rule Library"/>
</ReferencedRules>
  <Source>
<![CDATA[
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import sailpoint.api.SailPointContext;
import org.apache.commons.logging.Log;
import sailpoint.object.TaskResult;
import sailpoint.object.Certification;
import sailpoint.object.Identity;

//Log mylogger = LogFactory.getLog("rule.CertificationSignOffApprover");
//mylogger.debug("Start CertificationSignOffApprover");
//add the following lines to IIQ Log4j properties file to use this logger
//logger.CertificationSignOffApprover.name=rule.CertificationSignOffApprover 
//logger.CertificationSignOffApprover.level=debug

//Available Input Variables
//certification;
//certifier;


//mylogger.debug("End CertificationSignOffApprover");
//return Map
return null;
]]>
  </Source>
</Rule>
</sailpoint>